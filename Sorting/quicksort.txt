//left와 right가 서로 뒤집어 졌을 때 정렬이 끝난것으로 판단

public class QuickSorting {
    
    public void sort(int[] data, int l, int r){
        int left = l;
        int right = r;
        int pivot = data[(l+r)/2];
        
        do{
            while(data[left] < pivot) left++;
            while(data[right] > pivot) right--;
            if(left <= right){    //위의 두 while문을 거쳤다면 피봇기준으로 값이 서로 반대 되어있는경우(아직 정렬이 끝나지 않았다면 바꿔줘야함)
                int temp = data[left];
                data[left] = data[right];
                data[right] = temp;
                left++;
                right--;
            }
        }while (left <= right);
        
        if(l < right) sort(data, l, right);//l은 처음 0 계속 고정
        if(r > left) sort(data, left, r);//r은 처음 5계속 고정
    }
    
    public static void main(String[] args) {
        
        //int data[] = {66, 10, 1, 34, 5, -10};
    	int data[] = {3,1,1,2,3};
        QuickSorting quick = new QuickSorting();
        quick.sort(data, 0, data.length - 1);
        for(int i=0; i<data.length; i++){
            System.out.println("data["+i+"] : "+data[i]);
        }
    }
}


