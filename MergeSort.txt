import java.util.Scanner;
public class Bubble_Sort_1517 {

	static int N;
	public static void MergeSort(int []arr, int StartIndex, int EndIndex){
		int MiddleIndex;

		if (EndIndex - StartIndex < 1)
			return;

		MiddleIndex = (StartIndex + EndIndex) / 2;

		MergeSort(arr, StartIndex, MiddleIndex);
		MergeSort(arr, MiddleIndex + 1, EndIndex);
		Merge(arr, StartIndex, MiddleIndex, EndIndex);
	}
	
	public static void Merge(int []arr, int StartIndex, int MiddleIndex, int EndIndex){
	
			int i;
			int Left = StartIndex;
			int Right = MiddleIndex + 1;
			int DestIndex = 0;
			
			int []Destination = new int[EndIndex - StartIndex + 1];
			
			//나누어진 두 집합을 차례로 비교 후 Destination에 크기별로 번갈아 가면서 입력
			while (Left <= MiddleIndex && Right <= EndIndex) {		
				if (arr[Left] < arr[Right]) {
					Destination[DestIndex] = arr[Left];
					Left++;
				}
				else {
					Destination[DestIndex] = arr[Right];
					Right++;
				}
				DestIndex++;
			}
			
			//두 집합에서 남은 부분에 대해 Destination에 차례로 입력 (이미 비교가 끝난 상태이기 때문에 그냥 넣는다)
			while (Left <= MiddleIndex)			
				Destination[DestIndex++] = arr[Left++];

			while (Right <= EndIndex)
				Destination[DestIndex++] = arr[Right++];

			DestIndex = 0;
			for (i = StartIndex; i <= EndIndex; i++) {
				arr[i] = Destination[DestIndex++];
			}
	}
	
	
	public static void main(String[] args) {
		int i;
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		int arr[] = new int[N];
		for(i=0;i<N;i++){
			arr[i] = sc.nextInt();
		}
		MergeSort(arr,0,N-1);
		for(i=0;i<N;i++){
			System.out.print(arr[i]+ " ");
		}
		
	}

}
